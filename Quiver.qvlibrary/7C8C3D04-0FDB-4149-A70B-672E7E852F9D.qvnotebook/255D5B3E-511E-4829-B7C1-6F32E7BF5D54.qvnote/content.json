{
  "title": "Objective-C Runtime 类型编码与属性",
  "cells": [
    {
      "type": "text",
      "data": "<p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><a href=\"https://developer.apple.com/library/content/documentation/Cocoa/Conceptual/ObjCruntimeGuide/Introduction/Introduction.html#//apple_ref/doc/uid/TP40008048-CH1-SW1\" style=\"box-sizing: content-box; color: rgb(82, 140, 232); text-decoration: none;\">Objective-C runtime Programming Guide 官档传送门</a></p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">出处:&nbsp;<a href=\"http://chenms.farbox.com/post/guan-dang-fan-yi/-yi-objective-c-runtime-bian-cheng-zhi-nan-san-lei-xing-bian-ma-yu-shu-xing#main\" style=\"font-size: 13px; font-family: Arial, Helvetica, sans-serif;\">http://chenms.farbox.com/post/guan-dang-fan-yi/-yi-objective-c-runtime-bian-cheng-zhi-nan-san-lei-xing-bian-ma-yu-shu-xing#main</a></p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">本文翻译自2009-10-19版的官档。<br style=\"box-sizing: content-box; line-height: 2.1;\">您可以在官档结尾的Document Revision History中查阅版本。<br style=\"box-sizing: content-box; line-height: 2.1;\">注：【】包含的部分引自原文。</p><h2 id=\"toc_0\" style=\"box-sizing: content-box; text-rendering: optimizelegibility; line-height: 1.2em; margin: 0px 0px 0.6em; font-size: 1.8em; font-family: 'Open Sans', sans-serif; letter-spacing: -1px; text-indent: -2px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">类型编码【Type Encodings】</h2><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">为了协助runtime系统（后文简称runtime），编译器会将方法的参数与返回值编码为一个C字符串，并将其和方法的selector绑定。编码系统在其他场景也会用到，因此编译器公开了@encode() 这个编译器指令。给定一个类型，@encode()可以返回编码后的C字符串，变量可以是int这种基本类型，也可以是结构体、union，也可以是类名。事实上，任意可以作为C函数sizeof()的参数的，都可以作为@encode()的参数。</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">char *buf1 = @encode(int **);\nchar *buf2 = @encode(struct key);\nchar *buf3 = @encode(Rectangle);</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">下表中列举了类型编码。当你想序列化或分发对象时也需要对对象编码，注意到两种编码有部分码是共有的。当你编写coder（译注：从下文看，NSCoder）时，你不能使用下表的码，除非它不支持@encode()。（译注：翻译可能有误）【there are codes that you may want to use when writing a coder that aren’t generated by @encode()】。更多信息请参考Foundation的NSCoder类。</p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">表 6- 1 OC类型编码<br style=\"box-sizing: content-box; line-height: 2.1;\"><img src=\"quiver-image-url/134BBC55BC6870A3B9654E784DAD6884.png\" alt=\"OCTypeEncoding.png\"><br></p><blockquote style=\"box-sizing: border-box; margin-bottom: 1.2em; padding: 1.5em 1.8em; border-left-width: 2px; border-left-color: rgb(204, 204, 204); background-color: rgb(249, 249, 249); font-size: 0.8em; color: rgb(51, 51, 51); font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><p style=\"box-sizing: content-box; margin: 0px; overflow: visible; line-height: 1.7;\">重要：OC不支持long double类型， @encode(long double) 返回d，和double一样。</p></blockquote><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">数组的编码是方括号中包含元素个数+元素编码，例如数组包含12个float指针，如下：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">[12^f]</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">结构体是在大括号(union也类似，只是在小括号中)中优先列出结构体标签【structure tag】，然后是一个等号，之后顺序排列各变量的编码，例如下面的结构体：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">typedef struct example {\n    id   anObject;\n    char *aString;\n    int  anInt;\n} Example;</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">将会编码成这样：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">{example=@*i}</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">结构体指针也要完整地列出结构体信息，如指向Example的指针如下：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">^{example=@*i}</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">但更多层的指针，则不必再列出结构体信息，例如：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">^^{example}</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">对象和结构体也类似，只不过最前面是类名，例如NSObject：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">{NSObject=#}</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">NSObject中只有一个Class类型的isa变量。</p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">除此之外，runtime还有一些专用的编码，@encode()不会返回这些编码，一般是用来修饰协议中声明的方法，如表6-2所示：</p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">表 6-2</p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\"><img src=\"quiver-image-url/A7FBE19A57F7BC8EDC2735D31847592D.png\" alt=\"6.2.png\"><br style=\"box-sizing: content-box; line-height: 2.1;\"><br></p><h2 id=\"toc_1\" style=\"box-sizing: content-box; text-rendering: optimizelegibility; line-height: 1.2em; margin: 0px 0px 0.6em; font-size: 1.8em; font-family: 'Open Sans', sans-serif; letter-spacing: -1px; text-indent: -2px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">属性【Declared Properties】</h2><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">编译器遇到属性声明时，它会生成相关的描述元信息，并将其和属性所属的类或协议等绑定。你可以使用相关的函数来通过名字访问属性的元信息。你可以获取到属性类型的@encode C字符串，以及一组属性的特性【attribute】的C字符串。每个类或协议中都有自己的属性信息列表。</p><h3 id=\"toc_2\" style=\"box-sizing: content-box; text-rendering: optimizelegibility; line-height: 1; margin: 0px 0px 0.8em; font-size: 1.5em; font-family: 'Open Sans', sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">属性类型和函数</h3><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">Property结构体定义了一个指向属性objc_property的不透明句柄。</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">typedef struct objc_property *Property;</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你可以使用class_copyPropertyList以及protocol_copyPropertyList函数来获取类或协议关联的属性列表：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">objc_property_t *class_copyPropertyList(Class cls, unsigned int *outCount)\nobjc_property_t *protocol_copyPropertyList(Protocol *proto, unsigned int *outCount)</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">例如，下面的类定义：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">@interface Lender : NSObject {\n    float alone;\n}\n@property float alone;\n@end</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你可以获取它的属性列表：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">id LenderClass = objc_getClass(\"Lender\");\nunsigned int outCount;\nobjc_property_t *properties = class_copyPropertyList(LenderClass, &amp;outCount);</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你也可以使用property_getName函数，获取属性的名字：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">const char *property_getName(objc_property_t property)</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你可以使用class_getProperty或protocol_getProperty来根据名字获取特定的属性：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">objc_property_t class_getProperty(Class cls, const char *name)\nobjc_property_t protocol_getProperty(Protocol *proto, const char *name, BOOL isRequiredProperty, BOOL isInstanceProperty)</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你可以使用property_getAttributes方法，获取属性的名字和@encode C字符串，类型的编码可参考Type Encodings一章，而属性的编码可参考后文的Property Type String 和 Property Attribute Description Examples 章节。</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">const char *property_getAttributes(objc_property_t property)</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">综上，你可以像下面这样打印一个类的属性列表：</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">id LenderClass = objc_getClass(\"Lender\");\nunsigned int outCount, i;\nobjc_property_t *properties = class_copyPropertyList(LenderClass, &amp;outCount);\nfor (i = 0; i &lt; outCount; i++) {\n    objc_property_t property = properties[i];\n    fprintf(stdout, \"%s %s\\n\", property_getName(property), property_getAttributes(property));\n}</code></pre><h3 id=\"toc_3\" style=\"box-sizing: content-box; text-rendering: optimizelegibility; line-height: 1; margin: 0px 0px 0.8em; font-size: 1.5em; font-family: 'Open Sans', sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">属性类型字符串</h3><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">你可以使用property_getAttributes获取属性的名字、@encode 类型字符串、以及属性的特性信息。<br style=\"box-sizing: content-box; line-height: 2.1;\">字符串以T+属性的@encode类型串+逗号开头，以V+属性名结束，两者之间包含属性的特性编码，用逗号分隔，特性编码如表7-1所示：<br style=\"box-sizing: content-box; line-height: 2.1;\"><img src=\"quiver-image-url/EAE4A82F54624AF707A725EAAFE0B773.png\" alt=\"7.2.png\"><br style=\"box-sizing: content-box; line-height: 2.1;\">详细示例见后文。</p><h3 id=\"toc_4\" style=\"box-sizing: content-box; text-rendering: optimizelegibility; line-height: 1; margin: 0px 0px 0.8em; font-size: 1.5em; font-family: 'Open Sans', sans-serif; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">属性特性描述示例【Property Attribute Description Examples】</h3><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">我们先定义几个示例用到的结构</p><pre style=\"box-sizing: border-box; margin-top: 1.6em; margin-bottom: 1.6em; border: 1px solid rgb(227, 237, 243); width: 760px; padding: 10px; font-family: Inconsolata, monospace, sans-serif; font-size: 0.9em; overflow: auto; background-color: rgb(247, 250, 251); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-position: initial initial; background-repeat: initial initial;\"><code style=\"box-sizing: content-box; font-family: Inconsolata, monospace, sans-serif; font-size: inherit; white-space: pre-wrap; border-style: none; border-top-left-radius: 2px; border-top-right-radius: 2px; border-bottom-right-radius: 2px; border-bottom-left-radius: 2px;\">enum FooManChu { FOO, MAN, CHU };\nstruct YorkshireTeaStruct { int pot; char lady; };\ntypedef struct YorkshireTeaStruct YorkshireTeaStructType;\nunion MoneyUnion { float alone; double down; };</code></pre><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">下表展示了property_getAttributes返回的属性描述。</p><p style=\"box-sizing: content-box; margin: 1.2em 0px; line-height: 1.7; font-family: 'Noto Serif', 'Hiragino Sans GB', 'Microsoft Yahei', serif; font-size: 16px; font-variant-ligatures: normal; orphans: 2; widows: 2; background-color: rgb(255, 255, 255);\">表7-2&nbsp;<br style=\"box-sizing: content-box; line-height: 2.1;\"><img src=\"quiver-image-url/9B86D9B8EB4CCC50ED0BA876491AE6DC.png\" alt=\"8.2.png\"><br></p>"
    }
  ]
}