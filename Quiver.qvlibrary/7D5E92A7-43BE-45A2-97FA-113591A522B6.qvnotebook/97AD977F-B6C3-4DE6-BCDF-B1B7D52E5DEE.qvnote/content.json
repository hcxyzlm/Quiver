{
  "title": "runloop面试题",
  "cells": [
    {
      "type": "markdown",
      "data": "## 什么是runloop？\n- runloop是通过内部维护的事件循环来对事件/消息进行管理的一个对象\n- 没有消息需要处理时，休眠已避免资源占用\n- 有消息需要处理时，立即被唤醒\n- 用户态和内核态的切换\n- 主线程默认创建一个runloop，保持不退出。\n- 创建子线程默认没有创建runloop，可以用currentRunLoop进行懒加载创建\n\n## 数据结构\n- nsrunloop是cfrunloop的封装，提供了提供了面向对象的api\n- runloop和线程一个对应关系\n- cfrunloop\n- cfrunloopmode\n- source/timer/observer\n- commonmodes是一个特殊的属性，是一个集成，数据结构为NSMutableDictory<NSString*>\n\n![IMAGE](quiver-image-url/DFD1FCEC67B75E09502C6264246AB157.jpg =1334x750)\n![IMAGE](quiver-image-url/921FF31A906B37958E1B265AD98AFA45.jpg =1334x750)\n![IMAGE](quiver-image-url/51154FF4A26578576CFF54EFD64C472E.jpg =1334x750)\n![IMAGE](quiver-image-url/359F357A1EFA4A1595C38F01308093B5.jpg =1334x750)\n\n### cfrunloopmode\n- name,source0,source1,observers,timers等组成\n- source0需要手动唤醒线程\n- source1具备唤醒线程的能力\n\n### CFRunLoopTimer\n- 基于定时器的处理逻辑\n\n### CFRunloopObserver\n- 观察时间点\n- 可以监听哪些时间点\n```objc\n    kCFRunLoopEntry = (1UL << 0),\n    kCFRunLoopBeforeTimers = (1UL << 1),\n    kCFRunLoopBeforeSources = (1UL << 2),//处理source\n    kCFRunLoopBeforeWaiting = (1UL << 5),// 进入休眠状态\n    kCFRunLoopAfterWaiting = (1UL << 6),// 唤醒状态\n    kCFRunLoopExit = (1UL << 7),        // \n    kCFRunLoopAllActivities = 0x0FFFFFFFU\n```\n\n### CFRunLoopCommonMode的特殊性\n- 不是实际存在的一种mode\n- 是同步source/timer/observer到多个model中的一种技术方案\n\n## 事件循环的实现机制\n- 当runloop处于休眠状态有哪些事件可以唤醒？source1,timer事件，外部手动唤醒(点击屏幕)\n- ![IMAGE](quiver-image-url/1931044D712BC1C22003A0C92DD45AA8.jpg =1334x750)\n\n\n##runloop和多线程\n- 线程和runloop是一一对象\n- 自己创建的线程需要手动创建runloop\n\n### 如何实现一个常驻线程\n- 为当前线程开启一个runloop，currentRunLoop\n- 向该线程添加一个port/source等维护runloop的事件循环。addPort\n- 启动runloop，run\n- ![IMAGE](quiver-image-url/BBEAA198AB9C601C536D72D6EFB97855.jpg =1334x750)\n\n## 总结\n- 怎样样保证子线程数据回来更新ui的时候不打断用户的滑动操作？\n- 可以把更新ui作为一个任务放在主线程的defalumode下，当停止滑动的时候再更新ui\n\n## runloop与nstimer\n- 滑动tableView的时候我们的定时器还会生效吗？\n- kCFRunloopdefaultmode发生切换到UITrankRunloopMode\n- 添加到commonmode的timer,会将timer添加到多个mode下，这样切换mode的时候也能回调"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}