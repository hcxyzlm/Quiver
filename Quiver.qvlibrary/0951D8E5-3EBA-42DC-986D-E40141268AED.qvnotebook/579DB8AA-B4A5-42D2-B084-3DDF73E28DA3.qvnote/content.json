{
  "title": "day03 props 和 state属性",
  "cells": [
    {
      "type": "markdown",
      "data": "### 作用\n- 当在组件间传值，在rn组件中之间通信需要用到props和stats\n\n\n### props属性\n- 什么是Props？一般用于自定义组件，大多数组件在创建时就可以使用各种参数来进行定制，用于定制的这些参数就称为props（属性）\n- props在父组件中定义，一旦定义，在整个组件声明周期都不在改变\n- 属性动态添加，空格分隔\n```\n<XMGView  name=\"小码哥\" age={1}></XMGView>\n定义name,age两个属性，在子组件用this.props.组件名,来获取\n```\n- 例子\n``` js\n// 自定义属性\nclass XMGView extends  Component {\n    // 必须要实现的方法\n    render() {\n        console.log(this.props);\n        return (\n            <View style={styles.xmgStyle }>\n                <Text>{this.props.name}</Text>\n            </View>\n        );\n    }\n}\n\n\n// 怎么获取生成属性,props\n// 什么时候使用,分隔符,当在对象里面,分隔属性的时候,需要使用,\n// {\n//     name:'zhuo',\n//     age:{1}\n// }\n\n// 3. 创建入口组件\nexport default class ReactNativeDemo extends Component {\n    render() { // 改方法加载view的时候自动调用,返回一个组件标签\n        // 返回值，需要用（）包住，固定写法\n        return (\n            <View style={styles.rootView}>\n                {/*不能再父控件设置尺寸,因为他会自动替换掉原来的*/}\n                <XMGView /*style={styles.xmgStyle }*/ name=\"小码哥\" age={1}></XMGView>\n            </View>\n        );\n\n    }\n\n\n}\n\nconst styles = StyleSheet.create({\n    // 描述样式\n    // 描述内容view的样式\n    rootView:{\n        flex:1,\n        backgroundColor:'red'\n    },\n    innerView:{\n        backgroundColor:'green',\n        // 外边距\n        marginRight:10, // 距离右边10像素\n        marginTop:20,\n        width:375,\n        height:300,\n        flexDirection:'row',\n    },\n\n    xmgStyle:{\n        backgroundColor:'orange',\n        width:100,\n        height:100,\n        justifyContent:'center',\n        alignItems:'center',\n    }\n```\n\n### State属性\n- State：如果以后想修改某个属性，就修改界面，就需要用state。\n- 注意:State属性一般在constructor中声明(ES6)，在setState中修改数据.\n- 定义state属性\n```\nthis.state = {\n            money:0,\n        }\n```\n- 修改state属性\n```\nthis.setState({\n            money:money,\n            }\n        );\n```\n\n每隔一秒，money+10000，定时器\n\n注意：这里定时器方法必须用bind.\n``` js\nclass XMGView extends  Component {\n    // 必须要实现的方法\n    render() {\n        console.log(this.props);\n        return (\n            <View style={styles.xmgStyle }>\n                <Text>当前{this.state.money}</Text>\n            </View>\n        );\n    }\n\n    // 更新方法\n    updateMoney() {\n        console.log(this);\n        var money = this.state.money;\n        money += 10000;\n        console.log(money);\n\n        this.setState({\n            money:money,\n            }\n        );\n    }\n\n    // 构造方法,定义stats属性\n    constructor(props) {\n        super(props);// 固定写法\n\n        this.state = {\n            money:0,\n        }\n\n        console.log(\"初始化对象\");\n        console.log(this);\n        // 创建定时器\n        // 方法名, 多少毫秒一个周期执行,1秒= 1000毫秒\n        // 这里必须绑定,bind会生成了一个新的函数,并且由绑定者调用,否则this不明确\n        setInterval(this.updateMoney.bind(this), 1000);\n    }\n}\n\n\n// 3. 创建入口组件\nexport default class ReactNativeDemo extends Component {\n    render() {\n        return (\n            <View style={styles.rootView}>\n                <XMGView ></XMGView>\n            </View>\n        );\n\n    }\n\n\n}\n```"
    }
  ]
}