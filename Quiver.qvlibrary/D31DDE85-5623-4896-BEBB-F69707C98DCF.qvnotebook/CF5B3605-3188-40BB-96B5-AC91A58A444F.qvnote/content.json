{
  "title": "viper架构分析",
  "cells": [
    {
      "type": "markdown",
      "data": "## VIPER简介\n* viper，分别有view, Interactor，present,entity,router组成\n* 示意图如下：\n![viper](quiver-image-url/D8286076168168FC7D42C248533936FC.jpg =720x318)\n\n### view的职责\n- 展示ui\n- 对外暴露各种用于更新ui的接口，自己不主动更新ui\n- view持有外部注入一个eventhandler对象，将view层的事件发送给eventhandler\n- view持有一个外部一个datasource对象，在渲染过程中，会将datasource获取用于展示的数据。datasource应该尽量和具体业务无关\n- view想presenter提供routesource，用于界面跳转\n\n### preseonter的职责(view持有)\n- 接收并处理来自view的事件\n- 维护和view的各种相关配置，比如界面是否使用夜间模式\n- 调用interface提供 use case 执行业务逻辑\n- 向interface提供view中的数据，让interface生成需要model\n- 通知view进行操作\n\n### Interactor(交互器)\n- 实现和封装各种业务各种use case, 供外部使用\n- 维护和业务相关各种状态，比如是否正在编辑笔记\n- Interactor可以获取各种manager和server\n- 通过dadamanager维护model\n- Interactor持有一个外部注入的eventhandler对象。通过eventhandler对象对某些数据操作过程进行回调。\n- 持有一个又外部注入的datasource对象，用于操作view上的数据，更新model\n- interactor是业务的实现和维护者，他会调用各种server来实现业务逻辑\n\n### entity(实体)\n- model\n\n### router\n- 可以简单封装uikit的哪些跳转方法,也可以用route url来执行路由。\n- 初始化VIPER的各个模块\n\n### viper优缺点\n- 每个模块都是独立的，可测试性强\n- 隔离程度高，耦合程度低。\n- 一个模块要写很多协议。要建很多类\n\n##跟mvc的区别\n- viper把mvc的controller进一步拆分成了persenter,Interactor和router。persenter主要工作是在View和Interactor之间传递事件,并管理一些View的展示逻辑,主要业务的逻辑放在Interactor。则router则进一步解决了不同模块的耦合。\n\n### mvc架构迁移到viper\n- 整理Controller中的代码，把不同职责的代码用mark分隔好。\n- 整理好，把不同职责的代码分散到viper到不同的角色中。此时的view, presenter， interactor可以相互引用\n```objc\n@implementation ViewController\n//------View-------\n\n//View的生命周期\n#pragma mark View life\n# pragma mark View event\n//View需要从model中获取的数据\n#pragma mark Request view data source\n//监控、接收View的事件\n#pragma mark Send view event\n\n//------Presenter-------\n\n//处理View的事件\n#pragma mark Handle view event\n\n//界面跳转\n#pragma mark Wireframe\n\n\n//提供生成model需要的数据\n#pragma mark Provide model data source\n\n//处理业务事件，调用业务用例\n#pragma mark Handle business event\n\n//------Interactor-------\n\n//监控、接收业务事件\n#pragma mark Send business event\n\n\n//获取生成model需要的数据\n#pragma mark Request data for model\n\n//维护model\n#pragma mark Manage model\n\n@en\n```\n\n## 参考\n* https://github.com/Zuikyo/ZIKViper/blob/master/README-CN.md"
    }
  ]
}