{
  "title": "架构的思考",
  "cells": [
    {
      "type": "markdown",
      "data": "## 简单架构向大型架构演进的思考问题\n1. 模块粒度如何划分\n2. 如何分层\n3. 多团队如何协作\n\n### 划分粒度\n划分粒度遵循的原则有\n  - 单一功能原则： 对象功能要单一，不要在一个类中添加很多功能\n  - 开闭原则： 扩展是开放的，修改是封闭的\n  - 里氏替换原则：子类对象是可以替换基类对象\n  - 接口隔离原则：接口用途要单一，不要在一个接口上根据不同入参实现多个功能\n  - 依赖反转原则：方法应该依赖抽象，不要依赖实例。ios就是高层业务方法依赖于协议\n  \n如何分层\n组件解耦并不是说每个组件间都没有耦合，组件间也有上下级依赖关系，组件层次最好不要超过三层\n  - 底层可以是与业务无关的基础组件，如网络和存储\n  - 中间层一般是通用x的业务组件，如账号，埋点，支付，购物车等\n  - 最上层就是迭代业务组件，更新频率最高\n  \n### 架构方式\n1. 协议式架构\n2. 中间者架构\n\n### 中间者架构\n1. 拆分的组件会依赖中间者，但是组件之间不存在依赖关系。由于其他组件也会依赖这个中间者，组件相互间的通信也会通过中间者统一调度\n  "
    }
  ]
}